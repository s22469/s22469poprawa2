// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using s22469poprawa2.Models;

namespace s22469poprawa2.Migrations
{
    [DbContext(typeof(ExampleDbContext))]
    partial class ExampleDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("s22469poprawa2.Models.File", b =>
                {
                    b.Property<int>("TeamID")
                        .HasColumnType("int");

                    b.Property<string>("FileExtension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FileID")
                        .HasColumnType("int");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FileSize")
                        .HasColumnType("int");

                    b.HasKey("TeamID");

                    b.ToTable("File");

                    b.HasData(
                        new
                        {
                            TeamID = 1,
                            FileExtension = "exe",
                            FileID = 1,
                            FileName = "hehe",
                            FileSize = 500
                        },
                        new
                        {
                            TeamID = 2,
                            FileExtension = "pdf",
                            FileID = 2,
                            FileName = "wyniki",
                            FileSize = 1000
                        });
                });

            modelBuilder.Entity("s22469poprawa2.Models.Member", b =>
                {
                    b.Property<int>("MemberID")
                        .HasColumnType("int");

                    b.Property<string>("MeMberName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberNickName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberSurname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrganizationID")
                        .HasColumnType("int");

                    b.HasKey("MemberID");

                    b.ToTable("Member");

                    b.HasData(
                        new
                        {
                            MemberID = 1,
                            MeMberName = "Jarek",
                            MemberNickName = "Ziom",
                            MemberSurname = "Kowalczyk",
                            OrganizationID = 1
                        },
                        new
                        {
                            MemberID = 2,
                            MeMberName = "Aneta",
                            MemberNickName = "Ziomalka",
                            MemberSurname = "Nowak",
                            OrganizationID = 1
                        },
                        new
                        {
                            MemberID = 3,
                            MeMberName = "Kasia",
                            MemberNickName = "Kajak",
                            MemberSurname = "Szymanska",
                            OrganizationID = 2
                        });
                });

            modelBuilder.Entity("s22469poprawa2.Models.Membership", b =>
                {
                    b.Property<int>("TeamID")
                        .HasColumnType("int");

                    b.Property<int>("MemberID")
                        .HasColumnType("int");

                    b.Property<DateTime>("MembershipDate")
                        .HasColumnType("datetime2");

                    b.HasKey("TeamID");

                    b.HasIndex("MemberID");

                    b.ToTable("Membership");

                    b.HasData(
                        new
                        {
                            TeamID = 2,
                            MemberID = 1,
                            MembershipDate = new DateTime(2006, 1, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            TeamID = 1,
                            MemberID = 2,
                            MembershipDate = new DateTime(2006, 2, 13, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("s22469poprawa2.Models.Organization", b =>
                {
                    b.Property<int>("OrganizationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("OrganizationDomain")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrganizationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrganizationID");

                    b.ToTable("Organization");

                    b.HasData(
                        new
                        {
                            OrganizationID = 1,
                            OrganizationDomain = "xyz",
                            OrganizationName = "ZwiazekPilkarzy"
                        },
                        new
                        {
                            OrganizationID = 2,
                            OrganizationDomain = "xxx",
                            OrganizationName = "ZwiazekZeglarzy"
                        });
                });

            modelBuilder.Entity("s22469poprawa2.Models.Team", b =>
                {
                    b.Property<int>("TeamID")
                        .HasColumnType("int");

                    b.Property<int>("OrganizationID")
                        .HasColumnType("int");

                    b.Property<string>("TeamDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeamName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TeamID");

                    b.ToTable("Team");

                    b.HasData(
                        new
                        {
                            TeamID = 1,
                            OrganizationID = 1,
                            TeamDescription = "Wolne",
                            TeamName = "Zolwie"
                        },
                        new
                        {
                            TeamID = 2,
                            OrganizationID = 2,
                            TeamDescription = "Mleczne",
                            TeamName = "Kozy"
                        });
                });

            modelBuilder.Entity("s22469poprawa2.Models.File", b =>
                {
                    b.HasOne("s22469poprawa2.Models.Team", "TeamF")
                        .WithMany("Files")
                        .HasForeignKey("TeamID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TeamF");
                });

            modelBuilder.Entity("s22469poprawa2.Models.Member", b =>
                {
                    b.HasOne("s22469poprawa2.Models.Organization", "OrganizationF")
                        .WithMany("Members")
                        .HasForeignKey("MemberID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrganizationF");
                });

            modelBuilder.Entity("s22469poprawa2.Models.Membership", b =>
                {
                    b.HasOne("s22469poprawa2.Models.Member", "MemberF")
                        .WithMany("MembershipsMember")
                        .HasForeignKey("MemberID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("s22469poprawa2.Models.Team", "TeamF")
                        .WithMany("Memberships")
                        .HasForeignKey("TeamID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MemberF");

                    b.Navigation("TeamF");
                });

            modelBuilder.Entity("s22469poprawa2.Models.Team", b =>
                {
                    b.HasOne("s22469poprawa2.Models.Organization", "OrganizationF")
                        .WithMany("Teams")
                        .HasForeignKey("TeamID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrganizationF");
                });

            modelBuilder.Entity("s22469poprawa2.Models.Member", b =>
                {
                    b.Navigation("MembershipsMember");
                });

            modelBuilder.Entity("s22469poprawa2.Models.Organization", b =>
                {
                    b.Navigation("Members");

                    b.Navigation("Teams");
                });

            modelBuilder.Entity("s22469poprawa2.Models.Team", b =>
                {
                    b.Navigation("Files");

                    b.Navigation("Memberships");
                });
#pragma warning restore 612, 618
        }
    }
}
